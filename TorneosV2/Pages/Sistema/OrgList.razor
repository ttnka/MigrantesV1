@inherits OrgListBase
@inject NotificationService NS
@using TorneosV2.Modelos
@using static TorneosV2.Modelos.MyFunc;

@if (AddFormShow)
{
        <OrgAdd />
}

@if (LasOrgs.Any())
{
    <RadzenDataGrid @ref="OrgsGrid"
                    AllowFiltering="true" AllowPaging="true" PageSize="50"
                    AllowSorting="true" AllowColumnResize="true"
                    ExpandMode="DataGridExpandMode.Single" AllowGrouping="false"
                    EditMode="DataGridEditMode.Single" AllowColumnPicking="true"
                    Data="@LasOrgs" TItem="Z100_Org"
                    RowUpdate="@OnUpdateRow" RowCreate="@OnCreateRow" EmptyText="No hay registros">

        <HeaderTemplate>
            @if(ElUser.Nivel > 6)
            {
                <RadzenButton Icon="refresh" style="margin-bottom: 10px"
                              ButtonStyle="ButtonStyle.Success" Click="ShowAddForm">
                    @BtnNewText
                </RadzenButton>
            }
            <RadzenButton Icon="refresh" style="margin-bottom: 10px"
                          ButtonStyle="ButtonStyle.Info" Click="DetReadallOrgs">
                Actualizar
            </RadzenButton>
        </HeaderTemplate>

        <Template Context="datos1">
            <CascadingValue Value="LasOrgs" Name="LasOrgsAll">
                <RadzenTabs>
                    <Tabs>
                        <RadzenTabsItem Text="Usuarios">
                            <UsuariosList SoloLista="true" OrgIndy="datos1" />
                        </RadzenTabsItem>

                        <RadzenTabsItem Text="Libre">

                        </RadzenTabsItem>

                    </Tabs>
                </RadzenTabs>
            </CascadingValue>
        </Template>
        <!-- AQUI EMPIEZA REPORTE-->

        <Columns>
            <RadzenDataGridColumn TItem="Z100_Org" Title="Id"
                                  Filterable="false" Width="40px">
                <Template Context="datos">
                    @(LasOrgs.IndexOf(datos) + 1)
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="Z100_Org" Title="RFC" Filterable="true"
                                  Width="160px">
                <Template Context="datos">
                    @($"{@MyFunc.FormatoRFC(datos.Rfc)}")

                </Template>
                <EditTemplate Context="datos">
                    <RadzenTextBox Name="Rfc" @bind-Value="datos.Rfc" Style="width: 100%" /> <br>
                    <RadzenLengthValidator Component="Rfc" Min="12" Max="13"
                                           Text="El RFC de P Morales es de 12 digitos y 13 de P Fisicas" />

                </EditTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="Z100_Org" Title="Comercial"
                                  Filterable="true" Width="150px">
                <Template Context="datos">
                    <div style="white-space:pre-wrap">@datos.Comercial</div>
                </Template>
                <EditTemplate Context="datos">
                    <RadzenTextBox Name="Comercial" @bind-Value="datos.Comercial" Style="width: 90%" /><br>
                    <RadzenRequiredValidator Component="Comercial" Text="El Nombre Comercial es Obligatorio." />
                </EditTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="Z100_Org" Title="Razon Social"
                                  Filterable="true" Resizable="true" Width="250px">

                <Template Context="datos">
                    <RadzenLabel style="white-space:pre-wrap; line-height: initial">
                        @datos.RazonSocial
                    </RadzenLabel>
                </Template>

                <EditTemplate Context="datos">
                    <RadzenLabel style="white-space:pre-wrap; line-height: initial">
                        @if (datos.Rfc != null)
                        {
                            <RadzenTextBox Name="RazonSocial" @bind-Value="datos.RazonSocial"
                                           Placeholder="Nombre de la Empresa" Style="width: 90%" />
                        }

                    </RadzenLabel>
                </EditTemplate>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="Z100_Org" Title="Tipo"
                                  Filterable="true" Resizable="true" Width="180px">
                <Template Context="datos">
                    @datos.Tipo
                </Template>

                <EditTemplate Context="datos">
                    <RadzenDropDown Name="Tipo" Data=TipoOrgs @bind-Value=@datos.Tipo
                                    ValueProperty="Key" TextProperty="Value" AllowClear="true"
                                    Style="width: 100%;" />
                </EditTemplate>
            </RadzenDataGridColumn>

            
            <RadzenDataGridColumn TItem="Z100_Org" Context="sampleBlazorModelsSampleOrder"
                                  Filterable="false" Sortable="false" TextAlign="TextAlign.Center"
                                  Width="250px" Title="Estado">
                <Template Context="datos">
                    @if (datos.Rfc == Constantes.PgRfc || datos.Rfc == Constantes.SyRfc)
                    {
                        <label></label>
                    }
                    else
                    {
                        <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Secondary"
                                      Class="m-1" Click="@((args) => EditRow(datos))" Visible="@(!Editando)" />

                    }
                    @if (datos.Status)
                    {
                        <b>Activo</b>
                    }
                    else
                    {
                        <b>Suspendido</b>
                    }


                </Template>

                <EditTemplate Context="datos">

                    @if (datos.Estado != 3)
                    {
                        <div style="white-space:pre-wrap">
                            Borrar este registro?
                            <RadzenSelectBar @bind-Value=@datos.Status TValue="bool"
                                             Placeholder="Borrar este registro?">
                                <Items>
                                    <RadzenSelectBarItem Text="No" Value="true" />
                                    <RadzenSelectBarItem Text="Si" Value="false" />
                                </Items>
                            </RadzenSelectBar>
                        </div>
                    }

                    <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success"
                                  Class="m-1" Click="@((args) => SaveRow(datos))" />


                    <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Danger" Class="m-1"
                                  Click="@((args) => CancelEdit(datos))" />
                </EditTemplate>

            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}
else
{
    <div class="spinner">
        org
    </div>
}


@code {
    void ShowAddForm()
    {

        if(AddFormShow)
        {
            AddFormShow = false;
            BtnNewText = "Nueva Organizacion";
        }
        else
        {
            AddFormShow = true;
            BtnNewText = "Ocultar formulario";
        };
    }

    void Cancelar()
    {
        //OrgNew = new();
        OrgToInsert = new("", "", "", "", "", 3, false);
    }

    Z100_Org OrgToInsert = new("", "", "", "", "", 3, false);

    async Task EditRow(Z100_Org org)
    {
        await OrgsGrid!.EditRow(org);
        Editando = !Editando;
    }

    async void OnUpdateRow(Z100_Org org)
    {
        if (org == OrgToInsert) OrgToInsert = null!;

        Editando = !Editando;
        ApiRespuesta<Z100_Org> resultado = await Servicio(ServiciosTipos.Update, org);

        string txt = $"Razon Social: {org.RazonSocial}, Tipo: ";
        txt += org.Rfc.Length == 13 ? "Fisica" : "Moral";
        txt += $"tipo: {org.Tipo}, num cliente: {org.NumCliente},";
        txt += org.Status ? "Estatus: Activo" : "Estatus: Suspendido";
        if (resultado.Exito)
        {
            ShowNotification(ElMsn("info", "Actualizo",
                $"Se actualizo la info del org {org.Comercial}", 0));
            txt = $"{TBita}, Se actualizo la info de org {org.Comercial}";

            Z190_Bitacora bitaT = new(ElUser.UserId, txt, ElUser.OrgId);
            BitacoraMas(bitaT);
            await BitacoraWrite();
        }
        else
        {
            string etxt = $"Error No Se actualizo la info del org de {org.Comercial}";
            foreach (var e in resultado.MsnError)
            { etxt += $", {e}"; }

            ShowNotification(ElMsn("Error", "Error", etxt, 4000));
            txt = $"{TBita}, No se actualizo un registro de organizacion" + txt + ", ";
            txt += etxt;
            Z192_Logs logTemp = new(ElUser.UserId, txt, false);
            await LogAll(logTemp);
            
        }
        await OrgsGrid!.Reload();
    }

    async Task SaveRow(Z100_Org org)
    {
        await OrgsGrid!.UpdateRow(org);
    }

    void CancelEdit(Z100_Org org)
    {
        if (org == OrgToInsert) OrgToInsert = null!;

        Editando = !Editando;
        OrgsGrid!.CancelEditRow(org);
    }

    async Task InsertRow()
    {
        /*
        OrgToInsert = new(
            "", "", "", "", 3, false
            );

        Editando = !Editando;
        await OrgsGrid!.InsertRow(OrgToInsert);
        */
    }

    async void OnCreateRow(Z100_Org org)
    {
        if (org == OrgToInsert) OrgToInsert = null!;

        Editando = !Editando;
        ApiRespuesta<Z100_Org> resultado = await Servicio(ServiciosTipos.Insert, org);

        string txt = $"Razon Social: {org.RazonSocial}, Tipo: ";
        txt += org.Rfc.Length == 13 ? "Fisica" : "Moral";
        txt += $"tipo: {org.Tipo}, num cliente: {org.NumCliente},";
        txt += org.Status ? "Estatus: Activo" : "Estatus: Suspendido";

        if (resultado.Exito)
        {
            ShowNotification(ElMsn("Exito", "Nuevo requerimiento de org",
                $"Se creo un nuevo registro de org {org.Comercial}", 0));

            Z190_Bitacora bitaT = new(ElUser.UserId, $"{TBita}, {txt}", ElUser.OrgId);
            BitacoraMas(bitaT);
            await BitacoraWrite();
        }
        else
        {
            string etxt = $"Error NO se creo el nuevo registro de Oranizacion nueva {org.Comercial}    ";
            foreach (var e in resultado.MsnError)
            { etxt += $", {e}"; }

            ShowNotification(ElMsn("Error", "Error", etxt, 0));
            txt = $"{TBita}, No se creo una nueva organizacion " + txt + ", ";
            txt += etxt;
            Z192_Logs logTemp = new(ElUser.UserId, txt, true);
            await LogAll(logTemp);
        }
        await OrgsGrid!.Reload();
    }

    public void ShowNotification(NotificationMessage message)
    {
        NS.Notify(message);
    }
}

